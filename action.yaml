name: Publish to ECR
description: Build a container image and push it to ECR

inputs:
  folder:
    description: 'The folder containing the Dockerfile'
    required: true
    type: string
  repository_name:
    description: 'The name of the ECR repository'
    required: true
    type: string
  image_tag:
    description: 'The tag to use for the image'
    required: true
    type: string
  aws_region:
    description: 'The AWS region for ECR'
    required: true
    type: string
  iam_role:
    description: 'IAM role to assume for AWS operations'
    required: true
    type: string
  account_ID:
    description: 'AWS account ID'
    required: true
    type: string
  aws_container_account:
    description: 'AWS container account ID'
    required: true
    type: string

permissions:
  id-token: write
  contents: read

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.iam_role }}
        aws-region: ${{ inputs.aws_region }}
    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Login to ECR AWS Hosted
      id: login-ecr-aws
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_HOSTED_ID: ${{ inputs.aws_container_account }}
      with:
        registries: ${{ inputs.aws_container_account }}
    - name: Build and Push image to ECR
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REGION: ${{ inputs.aws_region }}
        REPOSITORY: ${{ inputs.repository_name }}
        IMAGE_TAG: ${{ inputs.image_tag }}
      run: |
        cd ${{ inputs.folder }}
        aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin 763104351884.dkr.ecr.$REGION.amazonaws.com
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
